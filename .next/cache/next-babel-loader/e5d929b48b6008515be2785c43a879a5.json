{"ast":null,"code":"var _jsxFileName = \"/home/ajl/development/ssi/trybe.id/trybe.verification/src/components/CertificateShareLink/CertificateShareLinkForm.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { QRCode } from \"react-qr-svg\";\nimport css from \"./sharing.scss\";\nimport { getShareLinkState } from \"../../reducers/certificate\";\n\nclass CertificateShareLinkForm extends Component {\n  render() {\n    const {\n      shareLink,\n      shareLinkState,\n      copiedLink,\n      handleCopyLink,\n      handleShareLinkToggle\n    } = this.props;\n    const certificateLink = shareLink && `${window.location.origin}/?documentId=${shareLink.id}#${shareLink.key}`;\n    return __jsx(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col-12 justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"row d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, __jsx(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Share your certificate\")), shareLinkState === \"INITIAL\" ? __jsx(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }) : __jsx(React.Fragment, null, shareLink.id && shareLink.key !== undefined ? __jsx(\"div\", {\n      className: \"offset-1 col-10 offset-l-2 col-l-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"row justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Share this certificate by copying the link below.\", __jsx(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"* Note: This link will automatically expire in\", \" \", __jsx(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"14 days\"), \".\")), __jsx(\"div\", {\n      className: \"row mt-4 d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      className: \"w-75\",\n      value: certificateLink,\n      onClick: () => handleCopyLink(certificateLink),\n      placeholder: \"Certificate link\",\n      readOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      type: \"button\",\n      className: `pointer ${css.copyBtn} w-25`,\n      onClick: () => handleCopyLink(certificateLink),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Copy\")), copiedLink && __jsx(\"div\", {\n      className: \"row justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, __jsx(\"small\", {\n      className: \"text-green\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Successfully copied share link!\")), __jsx(\"div\", {\n      className: \"row d-flex justify-content-center m-3 mt4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, __jsx(QRCode, {\n      level: \"H\",\n      style: {\n        width: 180\n      },\n      value: certificateLink,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }))) : __jsx(\"div\", {\n      id: \"error-message\",\n      className: \"row justify-content-center my-5 text-red\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, __jsx(\"i\", {\n      id: \"verify-invalid\",\n      className: \"fas fa-times-circle fa-2x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), \" \", __jsx(\"p\", {\n      className: \"align-middle ml-2 mt-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Could not generate sharing link.\"))), __jsx(\"div\", {\n      className: \"row d-flex justify-content-center m-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      type: \"button\",\n      className: `pointer ${css.btn}`,\n      onClick: handleShareLinkToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Close\"))));\n  }\n\n}\n\nconst Loader = () => __jsx(\"div\", {\n  className: css[\"renderer-loader\"],\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 104\n  },\n  __self: this\n}, __jsx(\"i\", {\n  className: \"fas fa-spinner fa-pulse fa-2x  mt8\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105\n  },\n  __self: this\n}), __jsx(\"div\", {\n  className: \"m-3\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 106\n  },\n  __self: this\n}, \"Generating Share Link ...\"));\n\nconst mapStateToProps = store => ({\n  shareLinkState: getShareLinkState(store)\n});\n\nexport default connect(mapStateToProps, null)(CertificateShareLinkForm);\nCertificateShareLinkForm.propTypes = {\n  copiedLink: PropTypes.bool,\n  shareLink: PropTypes.object,\n  shareLinkState: PropTypes.string,\n  handleCopyLink: PropTypes.func,\n  handleShareLinkToggle: PropTypes.func\n};","map":{"version":3,"sources":["/home/ajl/development/ssi/trybe.id/trybe.verification/src/components/CertificateShareLink/CertificateShareLinkForm.js"],"names":["React","Component","connect","PropTypes","QRCode","css","getShareLinkState","CertificateShareLinkForm","render","shareLink","shareLinkState","copiedLink","handleCopyLink","handleShareLinkToggle","props","certificateLink","window","location","origin","id","key","undefined","copyBtn","width","btn","Loader","mapStateToProps","store","propTypes","bool","object","string","func"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,SAASC,iBAAT,QAAkC,4BAAlC;;AAEA,MAAMC,wBAAN,SAAuCN,SAAvC,CAAiD;AAC/CO,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,SADI;AAEJC,MAAAA,cAFI;AAGJC,MAAAA,UAHI;AAIJC,MAAAA,cAJI;AAKJC,MAAAA;AALI,QAMF,KAAKC,KANT;AAQA,UAAMC,eAAe,GACnBN,SAAS,IACR,GAAEO,MAAM,CAACC,QAAP,CAAgBC,MAAO,gBAAeT,SAAS,CAACU,EAAG,IAAGV,SAAS,CAACW,GAAI,EAFzE;AAGA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,CADF,EAKGV,cAAc,KAAK,SAAnB,GACC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAGC,4BACGD,SAAS,CAACU,EAAV,IAAgBV,SAAS,CAACW,GAAV,KAAkBC,SAAlC,GACC;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yDACiD,GADjD,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,MAFF,CADF,EAQE;AAAK,MAAA,SAAS,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,KAAK,EAAEN,eAFT;AAGE,MAAA,OAAO,EAAE,MAAMH,cAAc,CAACG,eAAD,CAH/B;AAIE,MAAA,WAAW,EAAC,kBAJd;AAKE,MAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAG,WAAUV,GAAG,CAACiB,OAAQ,OAFpC;AAGE,MAAA,OAAO,EAAE,MAAMV,cAAc,CAACG,eAAD,CAH/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,CARF,EAwBGJ,UAAU,IACT;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF,CAzBJ,EA+BE;AAAK,MAAA,SAAS,EAAC,2CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AACE,MAAA,KAAK,EAAC,GADR;AAEE,MAAA,KAAK,EAAE;AAAEY,QAAAA,KAAK,EAAE;AAAT,OAFT;AAGE,MAAA,KAAK,EAAER,eAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA/BF,CADD,GAyCC;AACE,MAAA,EAAE,EAAC,eADL;AAEE,MAAA,SAAS,EAAC,0CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AACE,MAAA,EAAE,EAAC,gBADL;AAEE,MAAA,SAAS,EAAC,2BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAOK,GAPL,EAQE;AAAG,MAAA,SAAS,EAAC,wBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CARF,CA1CJ,CARJ,EAiEE;AAAK,MAAA,SAAS,EAAC,uCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAG,WAAUV,GAAG,CAACmB,GAAI,EAFhC;AAGE,MAAA,OAAO,EAAEX,qBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CAjEF,CADF,CADF;AA+ED;;AA5F8C;;AA+FjD,MAAMY,MAAM,GAAG,MACb;AAAK,EAAA,SAAS,EAAEpB,GAAG,CAAC,iBAAD,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAG,EAAA,SAAS,EAAC,oCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE;AAAK,EAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAFF,CADF;;AAOA,MAAMqB,eAAe,GAAGC,KAAK,KAAK;AAChCjB,EAAAA,cAAc,EAAEJ,iBAAiB,CAACqB,KAAD;AADD,CAAL,CAA7B;;AAIA,eAAezB,OAAO,CACpBwB,eADoB,EAEpB,IAFoB,CAAP,CAGbnB,wBAHa,CAAf;AAKAA,wBAAwB,CAACqB,SAAzB,GAAqC;AACnCjB,EAAAA,UAAU,EAAER,SAAS,CAAC0B,IADa;AAEnCpB,EAAAA,SAAS,EAAEN,SAAS,CAAC2B,MAFc;AAGnCpB,EAAAA,cAAc,EAAEP,SAAS,CAAC4B,MAHS;AAInCnB,EAAAA,cAAc,EAAET,SAAS,CAAC6B,IAJS;AAKnCnB,EAAAA,qBAAqB,EAAEV,SAAS,CAAC6B;AALE,CAArC","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { QRCode } from \"react-qr-svg\";\nimport css from \"./sharing.scss\";\nimport { getShareLinkState } from \"../../reducers/certificate\";\n\nclass CertificateShareLinkForm extends Component {\n  render() {\n    const {\n      shareLink,\n      shareLinkState,\n      copiedLink,\n      handleCopyLink,\n      handleShareLinkToggle\n    } = this.props;\n\n    const certificateLink =\n      shareLink &&\n      `${window.location.origin}/?documentId=${shareLink.id}#${shareLink.key}`;\n    return (\n      <div className=\"container\">\n        <div className=\"col-12 justify-content-center\">\n          <div className=\"row d-flex justify-content-center\">\n            <h4>Share your certificate</h4>\n          </div>\n\n          {shareLinkState === \"INITIAL\" ? (\n            <Loader />\n          ) : (\n            <>\n              {shareLink.id && shareLink.key !== undefined ? (\n                <div className=\"offset-1 col-10 offset-l-2 col-l-8\">\n                  <div className=\"row justify-content-center\">\n                    Share this certificate by copying the link below.\n                    <small>\n                      * Note: This link will automatically expire in{\" \"}\n                      <b>14 days</b>.\n                    </small>\n                  </div>\n                  <div className=\"row mt-4 d-flex justify-content-center\">\n                    <input\n                      className=\"w-75\"\n                      value={certificateLink}\n                      onClick={() => handleCopyLink(certificateLink)}\n                      placeholder=\"Certificate link\"\n                      readOnly\n                    />\n                    <button\n                      type=\"button\"\n                      className={`pointer ${css.copyBtn} w-25`}\n                      onClick={() => handleCopyLink(certificateLink)}\n                    >\n                      Copy\n                    </button>\n                  </div>\n                  {copiedLink && (\n                    <div className=\"row justify-content-center\">\n                      <small className=\"text-green\">\n                        Successfully copied share link!\n                      </small>\n                    </div>\n                  )}\n                  <div className=\"row d-flex justify-content-center m-3 mt4\">\n                    <QRCode\n                      level=\"H\"\n                      style={{ width: 180 }}\n                      value={certificateLink}\n                    />\n                  </div>\n                </div>\n              ) : (\n                <div\n                  id=\"error-message\"\n                  className=\"row justify-content-center my-5 text-red\"\n                >\n                  <i\n                    id=\"verify-invalid\"\n                    className=\"fas fa-times-circle fa-2x\"\n                  />{\" \"}\n                  <p className=\"align-middle ml-2 mt-1\">\n                    Could not generate sharing link.\n                  </p>\n                </div>\n              )}\n            </>\n          )}\n          <div className=\"row d-flex justify-content-center m-0\">\n            <button\n              type=\"button\"\n              className={`pointer ${css.btn}`}\n              onClick={handleShareLinkToggle}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Loader = () => (\n  <div className={css[\"renderer-loader\"]}>\n    <i className=\"fas fa-spinner fa-pulse fa-2x  mt8\" />\n    <div className=\"m-3\">Generating Share Link ...</div>\n  </div>\n);\n\nconst mapStateToProps = store => ({\n  shareLinkState: getShareLinkState(store)\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(CertificateShareLinkForm);\n\nCertificateShareLinkForm.propTypes = {\n  copiedLink: PropTypes.bool,\n  shareLink: PropTypes.object,\n  shareLinkState: PropTypes.string,\n  handleCopyLink: PropTypes.func,\n  handleShareLinkToggle: PropTypes.func\n};\n"]},"metadata":{},"sourceType":"module"}