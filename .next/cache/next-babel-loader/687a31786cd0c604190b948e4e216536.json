{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport CertificateDropzone from \"../CertificateDropZone\";\nimport css from \"./dropZoneSection.scss\";\nimport { updateCertificate } from \"../../reducers/certificate\";\n\nclass DropZoneSection extends Component {\n  async componentDidMount() {\n    let API_LOCATION;\n    const VER_PATH = '/c/';\n    const PUBLIC_ROUTE = 'public/cert';\n    const url = window.location.href;\n    const certParams = url.split(VER_PATH)[1];\n    const [id, network] = certParams.split('?'); // If there is a cert id to look up\n\n    if (id) {\n      // Network IDs: 1=prod, 2=staging\n      if (network == 1) {\n        API_LOCATION = 'https://certs.api.convergence.tech:3002';\n      } else if (network == 2) {\n        API_LOCATION = 'http://169.48.26.238:3002';\n      } else {\n        API_LOCATION = 'http://localhost:3002';\n      }\n\n      const API_URL = `${API_LOCATION}/${PUBLIC_ROUTE}`;\n\n      try {\n        const certString = await fetch(`${API_URL}/${id}`);\n        const cert = certString ? JSON.parse((await certString.json()).cert) : null;\n\n        if (cert) {\n          this.props.updateCertificate(cert);\n        }\n      } catch (err) {\n        // ...\n        console.error(err);\n      }\n    }\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"row p-5 bg-brand-dark text-white\"\n    }, __jsx(\"div\", {\n      className: css.main\n    }, __jsx(CertificateDropzone, null)));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCertificate: payload => dispatch(updateCertificate(payload))\n});\n\nexport default connect(null, mapDispatchToProps)(DropZoneSection);","map":null,"metadata":{},"sourceType":"module"}