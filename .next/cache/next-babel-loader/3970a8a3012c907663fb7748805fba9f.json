{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/home/ajl/development/ssi/trybe.id/trybe.verification/pages/_app.js\";\nvar __jsx = React.createElement;\nimport withRedux from \"next-redux-wrapper\";\nimport App, { Container } from \"next/app\";\nimport Router from \"next/router\";\nimport withGA from \"next-ga\";\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport fetch from \"isomorphic-fetch\";\nimport { mapValues } from \"lodash\";\nimport initStore from \"../src/store\";\nimport { GA_ID, ENVIRONMENT } from \"../src/config\";\nimport { types } from \"../src/reducers/featureToggle\";\n\nconst FeatureFlagLoader = ({\n  dispatch,\n  children\n}) => {\n  React.useEffect(() => {\n    const run = async () => {\n      const featureToggle = await fetch(\"https://s3-ap-southeast-1.amazonaws.com/opencerts.io/feature-toggle.json\", {\n        METHOD: \"GET\"\n      }).then(response => response.json());\n      dispatch({\n        type: types.UPDATE_FEATURE_TOGGLES,\n        payload: mapValues(featureToggle, ENVIRONMENT)\n      });\n    };\n\n    run();\n  }, []);\n  return children;\n};\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, __jsx(FeatureFlagLoader, {\n      dispatch: store.dispatch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst appWrappedWithGA = withGA(GA_ID, Router)(MyApp);\nexport default withRedux(initStore)(appWrappedWithGA);","map":{"version":3,"sources":["/home/ajl/development/ssi/trybe.id/trybe.verification/pages/_app.js"],"names":["withRedux","App","Container","Router","withGA","React","Provider","fetch","mapValues","initStore","GA_ID","ENVIRONMENT","types","FeatureFlagLoader","dispatch","children","useEffect","run","featureToggle","METHOD","then","response","json","type","UPDATE_FEATURE_TOGGLES","payload","MyApp","getInitialProps","Component","ctx","pageProps","render","store","props","appWrappedWithGA"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,oBAAtB;AACA,OAAOC,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,SAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,KAAT,EAAgBC,WAAhB,QAAmC,eAAnC;AACA,SAASC,KAAT,QAAsB,+BAAtB;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA4B;AACpDV,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AACpB,UAAMC,GAAG,GAAG,YAAY;AACtB,YAAMC,aAAa,GAAG,MAAMX,KAAK,CAC/B,0EAD+B,EAE/B;AAAEY,QAAAA,MAAM,EAAE;AAAV,OAF+B,CAAL,CAG1BC,IAH0B,CAGrBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHS,CAA5B;AAIAR,MAAAA,QAAQ,CAAC;AACPS,QAAAA,IAAI,EAAEX,KAAK,CAACY,sBADL;AAEPC,QAAAA,OAAO,EAAEjB,SAAS,CAACU,aAAD,EAAgBP,WAAhB;AAFX,OAAD,CAAR;AAID,KATD;;AAUAM,IAAAA,GAAG;AACJ,GAZD,EAYG,EAZH;AAaA,SAAOF,QAAP;AACD,CAfD;;AAiBA,MAAMW,KAAN,SAAoBzB,GAApB,CAAwB;AACtB,eAAa0B,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA7B,EAAiD;AAC/C,QAAIC,SAAS,GAAG,EAAhB;;AAEA,QAAIF,SAAS,CAACD,eAAd,EAA+B;AAC7BG,MAAAA,SAAS,GAAG,MAAMF,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CAAlB;AACD;;AAED,WAAO;AAAEC,MAAAA;AAAF,KAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEH,MAAAA,SAAF;AAAaE,MAAAA,SAAb;AAAwBE,MAAAA;AAAxB,QAAkC,KAAKC,KAA7C;AACA,WACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,iBAAD;AAAmB,MAAA,QAAQ,EAAEA,KAAK,CAAClB,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAegB,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF,CADF,CADF;AASD;;AAtBqB;;AAyBxB,MAAMI,gBAAgB,GAAG9B,MAAM,CAACM,KAAD,EAAQP,MAAR,CAAN,CAAsBuB,KAAtB,CAAzB;AACA,eAAe1B,SAAS,CAACS,SAAD,CAAT,CAAqByB,gBAArB,CAAf","sourcesContent":["import withRedux from \"next-redux-wrapper\";\nimport App, { Container } from \"next/app\";\nimport Router from \"next/router\";\nimport withGA from \"next-ga\";\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport fetch from \"isomorphic-fetch\";\nimport { mapValues } from \"lodash\";\nimport initStore from \"../src/store\";\nimport { GA_ID, ENVIRONMENT } from \"../src/config\";\nimport { types } from \"../src/reducers/featureToggle\";\n\nconst FeatureFlagLoader = ({ dispatch, children }) => {\n  React.useEffect(() => {\n    const run = async () => {\n      const featureToggle = await fetch(\n        \"https://s3-ap-southeast-1.amazonaws.com/opencerts.io/feature-toggle.json\",\n        { METHOD: \"GET\" }\n      ).then(response => response.json());\n      dispatch({\n        type: types.UPDATE_FEATURE_TOGGLES,\n        payload: mapValues(featureToggle, ENVIRONMENT)\n      });\n    };\n    run();\n  }, []);\n  return children;\n};\n\nclass MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return { pageProps };\n  }\n\n  render() {\n    const { Component, pageProps, store } = this.props;\n    return (\n      <Container>\n        <Provider store={store}>\n          <FeatureFlagLoader dispatch={store.dispatch}>\n            <Component {...pageProps} />\n          </FeatureFlagLoader>\n        </Provider>\n      </Container>\n    );\n  }\n}\n\nconst appWrappedWithGA = withGA(GA_ID, Router)(MyApp);\nexport default withRedux(initStore)(appWrappedWithGA);\n"]},"metadata":{},"sourceType":"module"}