{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ajl/development/ssi/trybe.id/trybe.verification/src/components/CertificateShareLink/CertificateShareLinkForm.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { QRCode } from \"react-qr-svg\";\nimport css from \"./sharing.scss\";\nimport { getShareLinkState } from \"../../reducers/certificate\";\n\nvar CertificateShareLinkForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CertificateShareLinkForm, _Component);\n\n  function CertificateShareLinkForm() {\n    _classCallCheck(this, CertificateShareLinkForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CertificateShareLinkForm).apply(this, arguments));\n  }\n\n  _createClass(CertificateShareLinkForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          shareLink = _this$props.shareLink,\n          shareLinkState = _this$props.shareLinkState,\n          copiedLink = _this$props.copiedLink,\n          handleCopyLink = _this$props.handleCopyLink,\n          handleShareLinkToggle = _this$props.handleShareLinkToggle;\n      var certificateLink = shareLink && \"\".concat(window.location.origin, \"/?documentId=\").concat(shareLink.id, \"#\").concat(shareLink.key);\n      return __jsx(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col-12 justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"row d-flex justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, __jsx(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Share your certificate\")), shareLinkState === \"INITIAL\" ? __jsx(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }) : __jsx(React.Fragment, null, shareLink.id && shareLink.key !== undefined ? __jsx(\"div\", {\n        className: \"offset-1 col-10 offset-l-2 col-l-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"row justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Share this certificate by copying the link below.\", __jsx(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"* Note: This link will automatically expire in\", \" \", __jsx(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"14 days\"), \".\")), __jsx(\"div\", {\n        className: \"row mt-4 d-flex justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        className: \"w-75\",\n        value: certificateLink,\n        onClick: function onClick() {\n          return handleCopyLink(certificateLink);\n        },\n        placeholder: \"Certificate link\",\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), __jsx(\"button\", {\n        type: \"button\",\n        className: \"pointer \".concat(css.copyBtn, \" w-25\"),\n        onClick: function onClick() {\n          return handleCopyLink(certificateLink);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Copy\")), copiedLink && __jsx(\"div\", {\n        className: \"row justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, __jsx(\"small\", {\n        className: \"text-green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Successfully copied share link!\")), __jsx(\"div\", {\n        className: \"row d-flex justify-content-center m-3 mt4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, __jsx(QRCode, {\n        level: \"H\",\n        style: {\n          width: 180\n        },\n        value: certificateLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }))) : __jsx(\"div\", {\n        id: \"error-message\",\n        className: \"row justify-content-center my-5 text-red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, __jsx(\"i\", {\n        id: \"verify-invalid\",\n        className: \"fas fa-times-circle fa-2x\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), \" \", __jsx(\"p\", {\n        className: \"align-middle ml-2 mt-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Could not generate sharing link.\"))), __jsx(\"div\", {\n        className: \"row d-flex justify-content-center m-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        type: \"button\",\n        className: \"pointer \".concat(css.btn),\n        onClick: handleShareLinkToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Close\"))));\n    }\n  }]);\n\n  return CertificateShareLinkForm;\n}(Component);\n\nvar Loader = function Loader() {\n  return __jsx(\"div\", {\n    className: css[\"renderer-loader\"],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, __jsx(\"i\", {\n    className: \"fas fa-spinner fa-pulse fa-2x  mt8\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"m-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"Generating Share Link ...\"));\n};\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    shareLinkState: getShareLinkState(store)\n  };\n};\n\nexport default connect(mapStateToProps, null)(CertificateShareLinkForm);\nCertificateShareLinkForm.propTypes = {\n  copiedLink: PropTypes.bool,\n  shareLink: PropTypes.object,\n  shareLinkState: PropTypes.string,\n  handleCopyLink: PropTypes.func,\n  handleShareLinkToggle: PropTypes.func\n};","map":{"version":3,"sources":["/home/ajl/development/ssi/trybe.id/trybe.verification/src/components/CertificateShareLink/CertificateShareLinkForm.js"],"names":["React","Component","connect","PropTypes","QRCode","css","getShareLinkState","CertificateShareLinkForm","props","shareLink","shareLinkState","copiedLink","handleCopyLink","handleShareLinkToggle","certificateLink","window","location","origin","id","key","undefined","copyBtn","width","btn","Loader","mapStateToProps","store","propTypes","bool","object","string","func"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { QRCode } from \"react-qr-svg\";\nimport css from \"./sharing.scss\";\nimport { getShareLinkState } from \"../../reducers/certificate\";\n\nclass CertificateShareLinkForm extends Component {\n  render() {\n    const {\n      shareLink,\n      shareLinkState,\n      copiedLink,\n      handleCopyLink,\n      handleShareLinkToggle\n    } = this.props;\n\n    const certificateLink =\n      shareLink &&\n      `${window.location.origin}/?documentId=${shareLink.id}#${shareLink.key}`;\n    return (\n      <div className=\"container\">\n        <div className=\"col-12 justify-content-center\">\n          <div className=\"row d-flex justify-content-center\">\n            <h4>Share your certificate</h4>\n          </div>\n\n          {shareLinkState === \"INITIAL\" ? (\n            <Loader />\n          ) : (\n            <>\n              {shareLink.id && shareLink.key !== undefined ? (\n                <div className=\"offset-1 col-10 offset-l-2 col-l-8\">\n                  <div className=\"row justify-content-center\">\n                    Share this certificate by copying the link below.\n                    <small>\n                      * Note: This link will automatically expire in{\" \"}\n                      <b>14 days</b>.\n                    </small>\n                  </div>\n                  <div className=\"row mt-4 d-flex justify-content-center\">\n                    <input\n                      className=\"w-75\"\n                      value={certificateLink}\n                      onClick={() => handleCopyLink(certificateLink)}\n                      placeholder=\"Certificate link\"\n                      readOnly\n                    />\n                    <button\n                      type=\"button\"\n                      className={`pointer ${css.copyBtn} w-25`}\n                      onClick={() => handleCopyLink(certificateLink)}\n                    >\n                      Copy\n                    </button>\n                  </div>\n                  {copiedLink && (\n                    <div className=\"row justify-content-center\">\n                      <small className=\"text-green\">\n                        Successfully copied share link!\n                      </small>\n                    </div>\n                  )}\n                  <div className=\"row d-flex justify-content-center m-3 mt4\">\n                    <QRCode\n                      level=\"H\"\n                      style={{ width: 180 }}\n                      value={certificateLink}\n                    />\n                  </div>\n                </div>\n              ) : (\n                <div\n                  id=\"error-message\"\n                  className=\"row justify-content-center my-5 text-red\"\n                >\n                  <i\n                    id=\"verify-invalid\"\n                    className=\"fas fa-times-circle fa-2x\"\n                  />{\" \"}\n                  <p className=\"align-middle ml-2 mt-1\">\n                    Could not generate sharing link.\n                  </p>\n                </div>\n              )}\n            </>\n          )}\n          <div className=\"row d-flex justify-content-center m-0\">\n            <button\n              type=\"button\"\n              className={`pointer ${css.btn}`}\n              onClick={handleShareLinkToggle}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Loader = () => (\n  <div className={css[\"renderer-loader\"]}>\n    <i className=\"fas fa-spinner fa-pulse fa-2x  mt8\" />\n    <div className=\"m-3\">Generating Share Link ...</div>\n  </div>\n);\n\nconst mapStateToProps = store => ({\n  shareLinkState: getShareLinkState(store)\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(CertificateShareLinkForm);\n\nCertificateShareLinkForm.propTypes = {\n  copiedLink: PropTypes.bool,\n  shareLink: PropTypes.object,\n  shareLinkState: PropTypes.string,\n  handleCopyLink: PropTypes.func,\n  handleShareLinkToggle: PropTypes.func\n};\n"]},"metadata":{},"sourceType":"module"}