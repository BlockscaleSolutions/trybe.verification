{"ast":null,"code":"var _jsxFileName = \"/home/ajl/development/ssi/trybe.id/trybe.verification/src/components/ViewerPageContainer.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Router from \"next/router\";\nimport copy from \"clipboard-copy\";\nimport { getData } from \"@govtechsg/open-attestation\";\nimport { updateCertificate, sendCertificate, sendCertificateReset, generateShareLink, getCertificate, getVerifying, getIssuerIdentityStatus, getHashStatus, getIssuedStatus, getNotRevokedStatus, getVerified, getEmailSendingState, getShareLink, getShareLinkState, updateObfuscatedCertificate } from \"../reducers/certificate\";\nimport CertificateViewer from \"./CertificateViewer\";\n\nclass MainPageContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showSharing: false,\n      detailedVerifyVisible: false,\n      copiedLink: false\n    };\n    this.toggleDetailedView = this.toggleDetailedView.bind(this);\n    this.handleCertificateChange = this.handleCertificateChange.bind(this);\n    this.handleSharingToggle = this.handleSharingToggle.bind(this);\n    this.handleShareLinkToggle = this.handleShareLinkToggle.bind(this);\n    this.handleSendCertificate = this.handleSendCertificate.bind(this);\n    this.handleCopyLink = this.handleCopyLink.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      document\n    } = this.props;\n\n    if (!document) {\n      Router.replace(\"/\");\n    }\n  }\n\n  handleSharingToggle() {\n    this.props.sendCertificateReset();\n    this.setState({\n      showSharing: !this.state.showSharing\n    });\n  }\n\n  handleShareLinkToggle() {\n    if (!this.state.showShareLink) {\n      this.props.generateShareLink();\n    }\n\n    this.setState({\n      showShareLink: !this.state.showShareLink,\n      copiedLink: false\n    });\n  }\n\n  handleCopyLink(certificateLink) {\n    copy(certificateLink);\n    this.setState({\n      copiedLink: true\n    });\n  }\n\n  toggleDetailedView() {\n    this.setState({\n      detailedVerifyVisible: !this.state.detailedVerifyVisible\n    });\n  }\n\n  handleCertificateChange(certificate) {\n    this.props.updateCertificate(certificate);\n  }\n\n  handleSendCertificate({\n    email,\n    captcha\n  }) {\n    this.props.sendCertificate({\n      email,\n      captcha\n    });\n  }\n\n  render() {\n    if (!this.props.document) return null;\n    return __jsx(CertificateViewer, {\n      document: this.props.document,\n      certificate: getData(this.props.document),\n      verifying: this.props.verifying,\n      hashStatus: this.props.hashStatus,\n      issuedStatus: this.props.issuedStatus,\n      notRevokedStatus: this.props.notRevokedStatus,\n      issuerIdentityStatus: this.props.issuerIdentityStatus,\n      handleCertificateChange: this.handleCertificateChange,\n      showSharing: this.state.showSharing,\n      showShareLink: this.state.showShareLink,\n      shareLink: this.props.shareLink,\n      handleSendCertificate: this.handleSendCertificate,\n      handleSharingToggle: this.handleSharingToggle,\n      handleShareLinkToggle: this.handleShareLinkToggle,\n      handleCopyLink: this.handleCopyLink,\n      copiedLink: this.state.copiedLink,\n      emailSendingState: this.props.emailSendingState,\n      toggleDetailedView: this.toggleDetailedView,\n      detailedVerifyVisible: this.state.detailedVerifyVisible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = store => ({\n  document: getCertificate(store),\n  // Verification statuses used in verifier block\n  emailSendingState: getEmailSendingState(store),\n  shareLink: getShareLink(store),\n  shareLinkState: getShareLinkState(store),\n  verifying: getVerifying(store),\n  issuerIdentityStatus: getIssuerIdentityStatus(store),\n  hashStatus: getHashStatus(store),\n  issuedStatus: getIssuedStatus(store),\n  notRevokedStatus: getNotRevokedStatus(store),\n  verified: getVerified(store)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateCertificate: payload => dispatch(updateCertificate(payload)),\n  sendCertificate: payload => dispatch(sendCertificate(payload)),\n  sendCertificateReset: () => dispatch(sendCertificateReset()),\n  generateShareLink: () => dispatch(generateShareLink()),\n  updateObfuscatedCertificate: updatedDoc => dispatch(updateObfuscatedCertificate(updatedDoc))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPageContainer);\nMainPageContainer.propTypes = {\n  updateCertificate: PropTypes.func,\n  document: PropTypes.object,\n  certificate: PropTypes.object,\n  verifying: PropTypes.bool,\n  hashStatus: PropTypes.object,\n  issuedStatus: PropTypes.object,\n  notRevokedStatus: PropTypes.object,\n  issuerIdentityStatus: PropTypes.object,\n  verified: PropTypes.bool,\n  emailSendingState: PropTypes.string,\n  sendCertificate: PropTypes.func,\n  sendCertificateReset: PropTypes.func,\n  generateShareLink: PropTypes.func,\n  shareLink: PropTypes.object,\n  updateObfuscatedCertificate: PropTypes.func\n};","map":{"version":3,"sources":["/home/ajl/development/ssi/trybe.id/trybe.verification/src/components/ViewerPageContainer.js"],"names":["React","Component","PropTypes","connect","Router","copy","getData","updateCertificate","sendCertificate","sendCertificateReset","generateShareLink","getCertificate","getVerifying","getIssuerIdentityStatus","getHashStatus","getIssuedStatus","getNotRevokedStatus","getVerified","getEmailSendingState","getShareLink","getShareLinkState","updateObfuscatedCertificate","CertificateViewer","MainPageContainer","constructor","props","state","showSharing","detailedVerifyVisible","copiedLink","toggleDetailedView","bind","handleCertificateChange","handleSharingToggle","handleShareLinkToggle","handleSendCertificate","handleCopyLink","componentDidMount","document","replace","setState","showShareLink","certificateLink","certificate","email","captcha","render","verifying","hashStatus","issuedStatus","notRevokedStatus","issuerIdentityStatus","shareLink","emailSendingState","mapStateToProps","store","shareLinkState","verified","mapDispatchToProps","dispatch","payload","updatedDoc","propTypes","func","object","bool","string"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Router from \"next/router\";\nimport copy from \"clipboard-copy\";\nimport { getData } from \"@govtechsg/open-attestation\";\n\nimport {\n  updateCertificate,\n  sendCertificate,\n  sendCertificateReset,\n  generateShareLink,\n  getCertificate,\n  getVerifying,\n  getIssuerIdentityStatus,\n  getHashStatus,\n  getIssuedStatus,\n  getNotRevokedStatus,\n  getVerified,\n  getEmailSendingState,\n  getShareLink,\n  getShareLinkState,\n  updateObfuscatedCertificate\n} from \"../reducers/certificate\";\nimport CertificateViewer from \"./CertificateViewer\";\n\nclass MainPageContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showSharing: false,\n      detailedVerifyVisible: false,\n      copiedLink: false\n    };\n    this.toggleDetailedView = this.toggleDetailedView.bind(this);\n    this.handleCertificateChange = this.handleCertificateChange.bind(this);\n    this.handleSharingToggle = this.handleSharingToggle.bind(this);\n    this.handleShareLinkToggle = this.handleShareLinkToggle.bind(this);\n    this.handleSendCertificate = this.handleSendCertificate.bind(this);\n    this.handleCopyLink = this.handleCopyLink.bind(this);\n  }\n\n  componentDidMount() {\n    const { document } = this.props;\n    if (!document) {\n      Router.replace(\"/\");\n    }\n  }\n\n  handleSharingToggle() {\n    this.props.sendCertificateReset();\n    this.setState({ showSharing: !this.state.showSharing });\n  }\n\n  handleShareLinkToggle() {\n    if (!this.state.showShareLink) {\n      this.props.generateShareLink();\n    }\n    this.setState({\n      showShareLink: !this.state.showShareLink,\n      copiedLink: false\n    });\n  }\n\n  handleCopyLink(certificateLink) {\n    copy(certificateLink);\n    this.setState({ copiedLink: true });\n  }\n\n  toggleDetailedView() {\n    this.setState({\n      detailedVerifyVisible: !this.state.detailedVerifyVisible\n    });\n  }\n\n  handleCertificateChange(certificate) {\n    this.props.updateCertificate(certificate);\n  }\n\n  handleSendCertificate({ email, captcha }) {\n    this.props.sendCertificate({ email, captcha });\n  }\n\n  render() {\n    if (!this.props.document) return null;\n    return (\n      <CertificateViewer\n        document={this.props.document}\n        certificate={getData(this.props.document)}\n        verifying={this.props.verifying}\n        hashStatus={this.props.hashStatus}\n        issuedStatus={this.props.issuedStatus}\n        notRevokedStatus={this.props.notRevokedStatus}\n        issuerIdentityStatus={this.props.issuerIdentityStatus}\n        handleCertificateChange={this.handleCertificateChange}\n        showSharing={this.state.showSharing}\n        showShareLink={this.state.showShareLink}\n        shareLink={this.props.shareLink}\n        handleSendCertificate={this.handleSendCertificate}\n        handleSharingToggle={this.handleSharingToggle}\n        handleShareLinkToggle={this.handleShareLinkToggle}\n        handleCopyLink={this.handleCopyLink}\n        copiedLink={this.state.copiedLink}\n        emailSendingState={this.props.emailSendingState}\n        toggleDetailedView={this.toggleDetailedView}\n        detailedVerifyVisible={this.state.detailedVerifyVisible}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  document: getCertificate(store),\n\n  // Verification statuses used in verifier block\n  emailSendingState: getEmailSendingState(store),\n  shareLink: getShareLink(store),\n  shareLinkState: getShareLinkState(store),\n  verifying: getVerifying(store),\n  issuerIdentityStatus: getIssuerIdentityStatus(store),\n  hashStatus: getHashStatus(store),\n  issuedStatus: getIssuedStatus(store),\n  notRevokedStatus: getNotRevokedStatus(store),\n  verified: getVerified(store)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateCertificate: payload => dispatch(updateCertificate(payload)),\n  sendCertificate: payload => dispatch(sendCertificate(payload)),\n  sendCertificateReset: () => dispatch(sendCertificateReset()),\n  generateShareLink: () => dispatch(generateShareLink()),\n  updateObfuscatedCertificate: updatedDoc =>\n    dispatch(updateObfuscatedCertificate(updatedDoc))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MainPageContainer);\n\nMainPageContainer.propTypes = {\n  updateCertificate: PropTypes.func,\n  document: PropTypes.object,\n  certificate: PropTypes.object,\n  verifying: PropTypes.bool,\n  hashStatus: PropTypes.object,\n  issuedStatus: PropTypes.object,\n  notRevokedStatus: PropTypes.object,\n  issuerIdentityStatus: PropTypes.object,\n  verified: PropTypes.bool,\n  emailSendingState: PropTypes.string,\n  sendCertificate: PropTypes.func,\n  sendCertificateReset: PropTypes.func,\n  generateShareLink: PropTypes.func,\n  shareLink: PropTypes.object,\n  updateObfuscatedCertificate: PropTypes.func\n};\n"]},"metadata":{},"sourceType":"module"}