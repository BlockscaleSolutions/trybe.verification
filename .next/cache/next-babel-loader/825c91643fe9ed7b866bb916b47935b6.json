{"ast":null,"code":"// eslint-disable-next-line no-unused-vars\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nexport var FeatureFlag = function FeatureFlag(_ref) {\n  var name = _ref.name,\n      render = _ref.render,\n      fallback = _ref.fallback,\n      state = _ref.state;\n  var featureFlag = state.featureToggle[name];\n\n  if (featureFlag && render) {\n    return render();\n  }\n\n  if (!featureFlag && fallback) {\n    return fallback();\n  }\n\n  return null;\n};\nexport var FeatureFlagContainer = connect(function (state) {\n  return {\n    state: state\n  };\n})(FeatureFlag);\nFeatureFlag.propTypes = {\n  name: PropTypes.string,\n  render: PropTypes.func,\n  fallback: PropTypes.func\n};","map":{"version":3,"sources":["/home/ajl/development/ssi/trybe.id/trybe.verification/src/components/FeatureFlag.js"],"names":["React","PropTypes","connect","FeatureFlag","name","render","fallback","state","featureFlag","featureToggle","FeatureFlagContainer","propTypes","string","func"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAuC;AAAA,MAApCC,IAAoC,QAApCA,IAAoC;AAAA,MAA9BC,MAA8B,QAA9BA,MAA8B;AAAA,MAAtBC,QAAsB,QAAtBA,QAAsB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAChE,MAAMC,WAAW,GAAGD,KAAK,CAACE,aAAN,CAAoBL,IAApB,CAApB;;AACA,MAAII,WAAW,IAAIH,MAAnB,EAA2B;AACzB,WAAOA,MAAM,EAAb;AACD;;AACD,MAAI,CAACG,WAAD,IAAgBF,QAApB,EAA8B;AAC5B,WAAOA,QAAQ,EAAf;AACD;;AACD,SAAO,IAAP;AACD,CATM;AAWP,OAAO,IAAMI,oBAAoB,GAAGR,OAAO,CAAC,UAAAK,KAAK;AAAA,SAAK;AAAEA,IAAAA,KAAK,EAALA;AAAF,GAAL;AAAA,CAAN,CAAP,CAA8BJ,WAA9B,CAA7B;AAEPA,WAAW,CAACQ,SAAZ,GAAwB;AACtBP,EAAAA,IAAI,EAAEH,SAAS,CAACW,MADM;AAEtBP,EAAAA,MAAM,EAAEJ,SAAS,CAACY,IAFI;AAGtBP,EAAAA,QAAQ,EAAEL,SAAS,CAACY;AAHE,CAAxB","sourcesContent":["// eslint-disable-next-line no-unused-vars\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nexport const FeatureFlag = ({ name, render, fallback, state }) => {\n  const featureFlag = state.featureToggle[name];\n  if (featureFlag && render) {\n    return render();\n  }\n  if (!featureFlag && fallback) {\n    return fallback();\n  }\n  return null;\n};\n\nexport const FeatureFlagContainer = connect(state => ({ state }))(FeatureFlag);\n\nFeatureFlag.propTypes = {\n  name: PropTypes.string,\n  render: PropTypes.func,\n  fallback: PropTypes.func\n};\n"]},"metadata":{},"sourceType":"module"}