{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nexport const states = {\n  INITIAL: \"INITIAL\",\n  PENDING: \"PENDING\",\n  SUCCESS: \"SUCCESS\",\n  FAILURE: \"FAILURE\"\n};\nexport const initialState = {\n  raw: null,\n  rawModified: null,\n  store: null,\n  storeError: null,\n  storeLoading: false,\n  issuerIdentities: null,\n  certificateHash: false,\n  certificateIssued: false,\n  certificateNotRevoked: false,\n  certificateIssuer: false,\n  certificateStore: false,\n  certificateHashVerifying: false,\n  certificateIssuedVerifying: false,\n  certificateNotRevokedVerifying: false,\n  certificateIssuerVerifying: false,\n  certificateStoreVerifying: false,\n  certificateHashError: null,\n  certificateIssuedError: null,\n  certificateNotRevokedError: null,\n  certificateIssuerError: null,\n  certificateStoreError: null,\n  verificationStatus: [],\n  emailState: states.INITIAL,\n  emailError: null,\n  shareLink: {},\n  shareLinkState: states.INITIAL,\n  shareLinkError: null,\n  encryptedCertificate: {},\n  encryptedCertificateState: states.INITIAL,\n  encryptedCertificateError: null,\n  templates: null,\n  activeTemplateTab: 0\n}; // Actions\n\nexport const types = {\n  RESET_CERTIFICATE: \"RESET_CERTIFICATE\",\n  NETWORK_RESET: \"NETWORK_RESET\",\n  // For network change\n  UPDATE_CERTIFICATE: \"UPDATE_CERTIFICATE\",\n  LOADING_STORE_SUCCESS: \"LOADING_STORE_SUCCESS\",\n  LOADING_STORE_FAILURE: \"LOADING_STORE_FAILURE\",\n  VERIFYING_CERTIFICATE: \"VERIFYING_CERTIFICATE\",\n  VERIFYING_CERTIFICATE_HASH_SUCCESS: \"VERIFYING_CERTIFICATE_HASH_SUCCESS\",\n  VERIFYING_CERTIFICATE_HASH_FAILURE: \"VERIFYING_CERTIFICATE_HASH_FAILURE\",\n  VERIFYING_CERTIFICATE_ISSUED_SUCCESS: \"VERIFYING_CERTIFICATE_ISSUED_SUCCESS\",\n  VERIFYING_CERTIFICATE_ISSUED_FAILURE: \"VERIFYING_CERTIFICATE_ISSUED_FAILURE\",\n  VERIFYING_CERTIFICATE_REVOCATION_SUCCESS: \"VERIFYING_CERTIFICATE_REVOCATION_SUCCESS\",\n  VERIFYING_CERTIFICATE_REVOCATION_FAILURE: \"VERIFYING_CERTIFICATE_REVOCATION_FAILURE\",\n  VERIFYING_CERTIFICATE_ISSUER_SUCCESS: \"VERIFYING_CERTIFICATE_ISSUER_SUCCESS\",\n  VERIFYING_CERTIFICATE_ISSUER_FAILURE: \"VERIFYING_CERTIFICATE_ISSUER_FAILURE\",\n  VERIFYING_CERTIFICATE_STORE_SUCCESS: \"VERIFYING_CERTIFICATE_STORE_SUCCESS\",\n  VERIFYING_CERTIFICATE_STORE_FAILURE: \"VERIFYING_CERTIFICATE_STORE_FAILURE\",\n  SENDING_CERTIFICATE: \"SENDING_CERTIFICATE\",\n  SENDING_CERTIFICATE_SUCCESS: \"SENDING_CERTIFICATE_SUCCESS\",\n  SENDING_CERTIFICATE_FAILURE: \"SENDING_CERTIFICATE_FAILURE\",\n  SENDING_CERTIFICATE_RESET: \"SENDING_CERTIFICATE_RESET\",\n  GENERATE_SHARE_LINK: \"GENERATE_SHARE_LINK\",\n  GENERATE_SHARE_LINK_SUCCESS: \"GENERATE_SHARE_LINK_SUCCESS\",\n  GENERATE_SHARE_LINK_FAILURE: \"GENERATE_SHARE_LINK_FAILURE\",\n  GENERATE_SHARE_LINK_RESET: \"GENERATE_SHARE_LINK_RESET\",\n  GET_CERTIFICATE_BY_ID: \"GET_CERTIFICATE_BY_ID\",\n  GET_CERTIFICATE_BY_ID_PENDING: \"GET_CERTIFICATE_BY_ID_PENDING\",\n  GET_CERTIFICATE_BY_ID_SUCCESS: \"GET_CERTIFICATE_BY_ID_SUCCESS\",\n  GET_CERTIFICATE_BY_ID_FAILURE: \"GET_CERTIFICATE_BY_ID_FAILURE\",\n  CERTIFICATE_OBFUSCATE_RESET: \"CERTIFICATE_OBFUSCATE_RESET\",\n  CERTIFICATE_OBFUSCATE_UPDATE: \"CERTIFICATE_OBFUSCATE_UPDATE\",\n  CERTIFICATE_TEMPLATE_REGISTER: \"CERTIFICATE_TEMPLATE_REGISTER\",\n  CERTIFICATE_TEMPLATE_SELECT_TAB: \"CERTIFICATE_TEMPLATE_SELECT_TAB\"\n}; // Reducers\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case types.RESET_CERTIFICATE:\n    case types.NETWORK_RESET:\n      return _objectSpread({}, initialState);\n\n    case types.UPDATE_CERTIFICATE:\n      return _objectSpread({}, initialState, {\n        raw: action.payload,\n        rawModified: action.payload,\n        store: null,\n        storeError: null,\n        storeLoading: true\n      });\n\n    case types.LOADING_STORE_SUCCESS:\n      return _objectSpread({}, state, {\n        store: action.payload,\n        storeError: null,\n        storeLoading: false\n      });\n\n    case types.LOADING_STORE_FAILURE:\n      return _objectSpread({}, state, {\n        storeError: action.payload,\n        storeLoading: false\n      });\n\n    case types.VERIFYING_CERTIFICATE:\n      return _objectSpread({}, state, {\n        issuerIdentities: null,\n        certificateHash: false,\n        certificateIssued: false,\n        certificateNotRevoked: false,\n        certificateIssuer: false,\n        certificateStore: false,\n        certificateHashVerifying: true,\n        certificateIssuedVerifying: true,\n        certificateNotRevokedVerifying: true,\n        certificateIssuerVerifying: true,\n        certificateStoreVerifying: true,\n        certificateHashError: null,\n        certificateIssuedError: null,\n        certificateNotRevokedError: null,\n        certificateIssuerError: null,\n        certificateStoreError: null,\n        verificationStatus: []\n      });\n\n    case types.VERIFYING_CERTIFICATE_HASH_SUCCESS:\n      return _objectSpread({}, state, {\n        certificateHash: true,\n        certificateHashError: null,\n        certificateHashVerifying: false,\n        verificationStatus: [...state.verificationStatus, {\n          message: \"Certificate integrity checked\",\n          warning: false,\n          error: false\n        }]\n      });\n\n    case types.VERIFYING_CERTIFICATE_HASH_FAILURE:\n      return _objectSpread({}, state, {\n        certificateHash: false,\n        certificateHashError: action.payload,\n        certificateHashVerifying: false,\n        verificationStatus: [...state.verificationStatus, {\n          message: \"Certificate has been tampered\",\n          warning: false,\n          error: true\n        }]\n      });\n\n    case types.VERIFYING_CERTIFICATE_ISSUED_SUCCESS:\n      return _objectSpread({}, state, {\n        certificateIssued: true,\n        certificateIssuedError: null,\n        certificateIssuedVerifying: false,\n        verificationStatus: [...state.verificationStatus, {\n          message: \"Certificate has been issued\",\n          warning: false,\n          error: false\n        }]\n      });\n\n    case types.VERIFYING_CERTIFICATE_ISSUED_FAILURE:\n      return _objectSpread({}, state, {\n        certificateIssued: false,\n        certificateIssuedError: action.payload,\n        certificateIssuedVerifying: false,\n        verificationStatus: [...state.verificationStatus, {\n          message: \"Certificate is not issued\",\n          warning: false,\n          error: true\n        }]\n      });\n\n    case types.VERIFYING_CERTIFICATE_REVOCATION_SUCCESS:\n      return _objectSpread({}, state, {\n        certificateNotRevoked: true,\n        certificateNotRevokedError: null,\n        certificateNotRevokedVerifying: false,\n        verificationStatus: [...state.verificationStatus, {\n          message: \"Certificate is issued\",\n          warning: false,\n          error: false\n        }]\n      });\n\n    case types.VERIFYING_CERTIFICATE_REVOCATION_FAILURE:\n      return _objectSpread({}, state, {\n        certificateNotRevoked: false,\n        certificateNotRevokedError: action.payload,\n        certificateNotRevokedVerifying: false,\n        verificationStatus: [...state.verificationStatus, {\n          message: \"Certificate has been revoked\",\n          warning: false,\n          error: true\n        }]\n      });\n\n    case types.VERIFYING_CERTIFICATE_ISSUER_SUCCESS:\n      return _objectSpread({}, state, {\n        issuerIdentities: action.payload,\n        certificateIssuer: true,\n        certificateIssuerVerifying: false,\n        certificateIssuerError: null,\n        verificationStatus: [...state.verificationStatus, {\n          message: \"Known certificate issuer\",\n          warning: false,\n          error: false\n        }]\n      });\n\n    case types.VERIFYING_CERTIFICATE_ISSUER_FAILURE:\n      return _objectSpread({}, state, {\n        certificateIssuer: false,\n        certificateIssuerVerifying: false,\n        certificateIssuerError: action.payload,\n        verificationStatus: [...state.verificationStatus, {\n          message: \"Unknown certificate issuer\",\n          warning: false,\n          error: false\n        }]\n      });\n\n    case types.VERIFYING_CERTIFICATE_STORE_SUCCESS:\n      return _objectSpread({}, state, {\n        certificateStore: true,\n        certificateStoreError: null,\n        certificateStoreVerifying: false,\n        verificationStatus: [...state.verificationStatus, {\n          message: \"Certificate store checked\",\n          warning: false,\n          error: false\n        }]\n      });\n\n    case types.VERIFYING_CERTIFICATE_STORE_FAILURE:\n      return _objectSpread({}, state, {\n        certificateStore: false,\n        certificateStoreError: action.payload,\n        certificateStoreVerifying: false,\n        verificationStatus: [...state.verificationStatus, {\n          message: \"Certificate store does not exist\",\n          warning: false,\n          error: true\n        }]\n      });\n\n    case types.SENDING_CERTIFICATE:\n      return _objectSpread({}, state, {\n        emailState: states.PENDING,\n        emailError: null\n      });\n\n    case types.SENDING_CERTIFICATE_RESET:\n      return _objectSpread({}, state, {\n        emailState: states.INITIAL,\n        emailError: null\n      });\n\n    case types.SENDING_CERTIFICATE_SUCCESS:\n      return _objectSpread({}, state, {\n        emailState: states.SUCCESS,\n        emailError: null\n      });\n\n    case types.SENDING_CERTIFICATE_FAILURE:\n      return _objectSpread({}, state, {\n        emailState: states.FAILURE,\n        emailError: action.payload\n      });\n\n    case types.GENERATE_SHARE_LINK_SUCCESS:\n      return _objectSpread({}, state, {\n        shareLink: action.payload,\n        shareLinkState: states.SUCCESS\n      });\n\n    case types.GENERATE_SHARE_LINK_FAILURE:\n      return _objectSpread({}, state, {\n        shareLink: {},\n        shareLinkState: states.FAILURE\n      });\n\n    case types.GENERATE_SHARE_LINK_RESET:\n      return _objectSpread({}, state, {\n        shareLink: {},\n        shareLinkState: states.INITIAL\n      });\n\n    case types.GET_CERTIFICATE_BY_ID_PENDING:\n      return _objectSpread({}, state, {\n        encryptedCertificateState: states.PENDING\n      });\n\n    case types.GET_CERTIFICATE_BY_ID_SUCCESS:\n      return _objectSpread({}, state, {\n        encryptedCertificate: action.payload,\n        encryptedCertificateState: states.SUCCESS\n      });\n\n    case types.GET_CERTIFICATE_BY_ID_FAILURE:\n      return _objectSpread({}, state, {\n        encryptedCertificate: {},\n        encryptedCertificateState: states.FAILURE,\n        encryptedCertificateError: action.payload\n      });\n\n    case types.CERTIFICATE_OBFUSCATE_RESET:\n      return _objectSpread({}, initialState, {\n        rawModified: state.raw\n      });\n\n    case types.CERTIFICATE_OBFUSCATE_UPDATE:\n      return _objectSpread({}, state, {\n        rawModified: action.payload\n      });\n\n    case types.CERTIFICATE_TEMPLATE_REGISTER:\n      return _objectSpread({}, state, {\n        templates: action.payload\n      });\n\n    case types.CERTIFICATE_TEMPLATE_SELECT_TAB:\n      return _objectSpread({}, state, {\n        activeTemplateTab: action.payload\n      });\n\n    default:\n      return state;\n  }\n} // Action Creators\n\nexport function resetCertificateState() {\n  return {\n    type: types.RESET_CERTIFICATE\n  };\n}\nexport function updateCertificate(payload) {\n  return {\n    type: types.UPDATE_CERTIFICATE,\n    payload\n  };\n}\nexport function verifyCertificate(payload) {\n  return {\n    type: types.VERIFYING_CERTIFICATE,\n    payload\n  };\n}\nexport function updateFilteredCertificate(payload) {\n  return {\n    type: types.UPDATE_FILTERED_CERTIFICATE,\n    payload\n  };\n}\nexport function verifyingCertificateIssuerSuccess({\n  issuerIdentities\n}) {\n  return {\n    type: types.VERIFYING_CERTIFICATE_ISSUER_SUCCESS,\n    payload: issuerIdentities\n  };\n}\nexport function verifyingCertificateIssuerFailure({\n  error\n}) {\n  return {\n    type: types.VERIFYING_CERTIFICATE_ISSUER_FAILURE,\n    error\n  };\n}\nexport function verifyingCertificateStoreSuccess() {\n  return {\n    type: types.VERIFYING_CERTIFICATE_STORE_SUCCESS\n  };\n}\nexport function verifyingCertificateStoreFailure({\n  error\n}) {\n  return {\n    type: types.VERIFYING_CERTIFICATE_STORE_FAILURE,\n    error\n  };\n}\nexport function verifyingCertificateRevocationSuccess() {\n  return {\n    type: types.VERIFYING_CERTIFICATE_REVOCATION_SUCCESS\n  };\n}\nexport function verifyingCertificateRevocationFailure({\n  error\n}) {\n  return {\n    type: types.VERIFYING_CERTIFICATE_REVOCATION_FAILURE,\n    error\n  };\n}\nexport function verifyingCertificateIssuedSuccess() {\n  return {\n    type: types.VERIFYING_CERTIFICATE_ISSUED_SUCCESS\n  };\n}\nexport function verifyingCertificateIssuedFailure({\n  error\n}) {\n  return {\n    type: types.VERIFYING_CERTIFICATE_ISSUED_FAILURE,\n    error\n  };\n}\nexport function verifyingCertificateHashSuccess() {\n  return {\n    type: types.VERIFYING_CERTIFICATE_HASH_SUCCESS\n  };\n}\nexport function verifyingCertificateHashFailure({\n  error\n}) {\n  return {\n    type: types.VERIFYING_CERTIFICATE_HASH_FAILURE,\n    error\n  };\n}\nexport function sendCertificate(payload) {\n  return {\n    type: types.SENDING_CERTIFICATE,\n    payload\n  };\n}\nexport function sendCertificateReset() {\n  return {\n    type: types.SENDING_CERTIFICATE_RESET\n  };\n}\nexport function generateShareLink() {\n  return {\n    type: types.GENERATE_SHARE_LINK\n  };\n}\nexport function retrieveCertificateByLink(payload) {\n  return {\n    type: types.GET_CERTIFICATE_BY_ID,\n    payload\n  };\n}\nexport function resetCertificateObfuscation() {\n  return {\n    type: types.CERTIFICATE_OBFUSCATE_RESET\n  };\n}\nexport function updateObfuscatedCertificate(payload) {\n  return {\n    type: types.CERTIFICATE_OBFUSCATE_UPDATE,\n    payload\n  };\n}\nexport function registerTemplates(payload) {\n  return {\n    type: types.CERTIFICATE_TEMPLATE_REGISTER,\n    payload\n  };\n}\nexport function selectTemplateTab(payload) {\n  return {\n    type: types.CERTIFICATE_TEMPLATE_SELECT_TAB,\n    payload\n  };\n} // Selectors\n\nexport function getIssuerIdentityStatus(store) {\n  const {\n    issuerIdentities,\n    certificateIssuerVerifying,\n    certificateIssuerError,\n    certificateIssuer\n  } = store.certificate;\n  return {\n    identities: issuerIdentities,\n    verified: certificateIssuer,\n    verifying: certificateIssuerVerifying,\n    error: certificateIssuerError\n  };\n}\nexport function getHashStatus(store) {\n  const {\n    certificateHash,\n    certificateHashError,\n    certificateHashVerifying\n  } = store.certificate;\n  return {\n    verified: certificateHash,\n    verifying: certificateHashVerifying,\n    error: certificateHashError\n  };\n}\nexport function getStoreStatus(store) {\n  const {\n    certificateStore,\n    certificateStoreError,\n    certificateStoreVerifying\n  } = store.certificate;\n  return {\n    verified: certificateStore,\n    verifying: certificateStoreVerifying,\n    error: certificateStoreError\n  };\n}\nexport function getIssuedStatus(store) {\n  const {\n    certificateIssued,\n    certificateIssuedError,\n    certificateIssuedVerifying\n  } = store.certificate;\n  return {\n    verified: certificateIssued,\n    verifying: certificateIssuedVerifying,\n    error: certificateIssuedError\n  };\n}\nexport function getNotRevokedStatus(store) {\n  const {\n    certificateNotRevoked,\n    certificateNotRevokedError,\n    certificateNotRevokedVerifying\n  } = store.certificate;\n  return {\n    verified: certificateNotRevoked,\n    verifying: certificateNotRevokedVerifying,\n    error: certificateNotRevokedError\n  };\n}\nexport function getCertificate(store) {\n  return store.certificate.rawModified;\n}\nexport function getVerifying(store) {\n  const {\n    certificateIssuerVerifying,\n    certificateHashVerifying,\n    certificateIssuedVerifying,\n    certificateNotRevokedVerifying,\n    certificateStoreVerifying\n  } = store.certificate;\n  return certificateIssuerVerifying || certificateHashVerifying || certificateIssuedVerifying || certificateNotRevokedVerifying || certificateStoreVerifying;\n}\nexport function getVerified(store) {\n  const hash = getHashStatus(store).verified;\n  const issued = getIssuedStatus(store).verified;\n  const notRevoked = getNotRevokedStatus(store).verified;\n  const identity = getIssuerIdentityStatus(store).verified;\n  const storeStatus = getStoreStatus(store).verified;\n  return hash && issued && notRevoked && identity && storeStatus;\n}\nexport function getVerificationStatus(store) {\n  return store.certificate.verificationStatus;\n}\nexport function getEmailSendingState(store) {\n  return store.certificate.emailState;\n}\nexport function getShareLink(store) {\n  return store.certificate.shareLink;\n}\nexport function getShareLinkState(store) {\n  return store.certificate.shareLinkState;\n}\nexport function getEncryptedCertificate(store) {\n  return store.certificate.encryptedCertificate;\n}\nexport function getEncryptedCertificateStatus(store) {\n  return store.certificate.encryptedCertificateState;\n}\nexport function getActiveTemplateTab(store) {\n  return store.certificate.activeTemplateTab;\n}\nexport function getTemplates(store) {\n  return store.certificate.templates;\n}","map":{"version":3,"sources":["/home/ajl/development/ssi/trybe.id/trybe.verification/src/reducers/certificate.js"],"names":["states","INITIAL","PENDING","SUCCESS","FAILURE","initialState","raw","rawModified","store","storeError","storeLoading","issuerIdentities","certificateHash","certificateIssued","certificateNotRevoked","certificateIssuer","certificateStore","certificateHashVerifying","certificateIssuedVerifying","certificateNotRevokedVerifying","certificateIssuerVerifying","certificateStoreVerifying","certificateHashError","certificateIssuedError","certificateNotRevokedError","certificateIssuerError","certificateStoreError","verificationStatus","emailState","emailError","shareLink","shareLinkState","shareLinkError","encryptedCertificate","encryptedCertificateState","encryptedCertificateError","templates","activeTemplateTab","types","RESET_CERTIFICATE","NETWORK_RESET","UPDATE_CERTIFICATE","LOADING_STORE_SUCCESS","LOADING_STORE_FAILURE","VERIFYING_CERTIFICATE","VERIFYING_CERTIFICATE_HASH_SUCCESS","VERIFYING_CERTIFICATE_HASH_FAILURE","VERIFYING_CERTIFICATE_ISSUED_SUCCESS","VERIFYING_CERTIFICATE_ISSUED_FAILURE","VERIFYING_CERTIFICATE_REVOCATION_SUCCESS","VERIFYING_CERTIFICATE_REVOCATION_FAILURE","VERIFYING_CERTIFICATE_ISSUER_SUCCESS","VERIFYING_CERTIFICATE_ISSUER_FAILURE","VERIFYING_CERTIFICATE_STORE_SUCCESS","VERIFYING_CERTIFICATE_STORE_FAILURE","SENDING_CERTIFICATE","SENDING_CERTIFICATE_SUCCESS","SENDING_CERTIFICATE_FAILURE","SENDING_CERTIFICATE_RESET","GENERATE_SHARE_LINK","GENERATE_SHARE_LINK_SUCCESS","GENERATE_SHARE_LINK_FAILURE","GENERATE_SHARE_LINK_RESET","GET_CERTIFICATE_BY_ID","GET_CERTIFICATE_BY_ID_PENDING","GET_CERTIFICATE_BY_ID_SUCCESS","GET_CERTIFICATE_BY_ID_FAILURE","CERTIFICATE_OBFUSCATE_RESET","CERTIFICATE_OBFUSCATE_UPDATE","CERTIFICATE_TEMPLATE_REGISTER","CERTIFICATE_TEMPLATE_SELECT_TAB","reducer","state","action","type","payload","message","warning","error","resetCertificateState","updateCertificate","verifyCertificate","updateFilteredCertificate","UPDATE_FILTERED_CERTIFICATE","verifyingCertificateIssuerSuccess","verifyingCertificateIssuerFailure","verifyingCertificateStoreSuccess","verifyingCertificateStoreFailure","verifyingCertificateRevocationSuccess","verifyingCertificateRevocationFailure","verifyingCertificateIssuedSuccess","verifyingCertificateIssuedFailure","verifyingCertificateHashSuccess","verifyingCertificateHashFailure","sendCertificate","sendCertificateReset","generateShareLink","retrieveCertificateByLink","resetCertificateObfuscation","updateObfuscatedCertificate","registerTemplates","selectTemplateTab","getIssuerIdentityStatus","certificate","identities","verified","verifying","getHashStatus","getStoreStatus","getIssuedStatus","getNotRevokedStatus","getCertificate","getVerifying","getVerified","hash","issued","notRevoked","identity","storeStatus","getVerificationStatus","getEmailSendingState","getShareLink","getShareLinkState","getEncryptedCertificate","getEncryptedCertificateStatus","getActiveTemplateTab","getTemplates"],"mappings":"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","sourcesContent":["export const states = {\n  INITIAL: \"INITIAL\",\n  PENDING: \"PENDING\",\n  SUCCESS: \"SUCCESS\",\n  FAILURE: \"FAILURE\"\n};\n\nexport const initialState = {\n  raw: null,\n  rawModified: null,\n  store: null,\n  storeError: null,\n  storeLoading: false,\n\n  issuerIdentities: null,\n  certificateHash: false,\n  certificateIssued: false,\n  certificateNotRevoked: false,\n  certificateIssuer: false,\n  certificateStore: false,\n\n  certificateHashVerifying: false,\n  certificateIssuedVerifying: false,\n  certificateNotRevokedVerifying: false,\n  certificateIssuerVerifying: false,\n  certificateStoreVerifying: false,\n\n  certificateHashError: null,\n  certificateIssuedError: null,\n  certificateNotRevokedError: null,\n  certificateIssuerError: null,\n  certificateStoreError: null,\n\n  verificationStatus: [],\n\n  emailState: states.INITIAL,\n  emailError: null,\n\n  shareLink: {},\n  shareLinkState: states.INITIAL,\n  shareLinkError: null,\n\n  encryptedCertificate: {},\n  encryptedCertificateState: states.INITIAL,\n  encryptedCertificateError: null,\n\n  templates: null,\n  activeTemplateTab: 0\n};\n\n// Actions\nexport const types = {\n  RESET_CERTIFICATE: \"RESET_CERTIFICATE\",\n  NETWORK_RESET: \"NETWORK_RESET\", // For network change\n\n  UPDATE_CERTIFICATE: \"UPDATE_CERTIFICATE\",\n\n  LOADING_STORE_SUCCESS: \"LOADING_STORE_SUCCESS\",\n  LOADING_STORE_FAILURE: \"LOADING_STORE_FAILURE\",\n\n  VERIFYING_CERTIFICATE: \"VERIFYING_CERTIFICATE\",\n\n  VERIFYING_CERTIFICATE_HASH_SUCCESS: \"VERIFYING_CERTIFICATE_HASH_SUCCESS\",\n  VERIFYING_CERTIFICATE_HASH_FAILURE: \"VERIFYING_CERTIFICATE_HASH_FAILURE\",\n\n  VERIFYING_CERTIFICATE_ISSUED_SUCCESS: \"VERIFYING_CERTIFICATE_ISSUED_SUCCESS\",\n  VERIFYING_CERTIFICATE_ISSUED_FAILURE: \"VERIFYING_CERTIFICATE_ISSUED_FAILURE\",\n\n  VERIFYING_CERTIFICATE_REVOCATION_SUCCESS:\n    \"VERIFYING_CERTIFICATE_REVOCATION_SUCCESS\",\n  VERIFYING_CERTIFICATE_REVOCATION_FAILURE:\n    \"VERIFYING_CERTIFICATE_REVOCATION_FAILURE\",\n\n  VERIFYING_CERTIFICATE_ISSUER_SUCCESS: \"VERIFYING_CERTIFICATE_ISSUER_SUCCESS\",\n  VERIFYING_CERTIFICATE_ISSUER_FAILURE: \"VERIFYING_CERTIFICATE_ISSUER_FAILURE\",\n\n  VERIFYING_CERTIFICATE_STORE_SUCCESS: \"VERIFYING_CERTIFICATE_STORE_SUCCESS\",\n  VERIFYING_CERTIFICATE_STORE_FAILURE: \"VERIFYING_CERTIFICATE_STORE_FAILURE\",\n\n  SENDING_CERTIFICATE: \"SENDING_CERTIFICATE\",\n  SENDING_CERTIFICATE_SUCCESS: \"SENDING_CERTIFICATE_SUCCESS\",\n  SENDING_CERTIFICATE_FAILURE: \"SENDING_CERTIFICATE_FAILURE\",\n  SENDING_CERTIFICATE_RESET: \"SENDING_CERTIFICATE_RESET\",\n\n  GENERATE_SHARE_LINK: \"GENERATE_SHARE_LINK\",\n  GENERATE_SHARE_LINK_SUCCESS: \"GENERATE_SHARE_LINK_SUCCESS\",\n  GENERATE_SHARE_LINK_FAILURE: \"GENERATE_SHARE_LINK_FAILURE\",\n  GENERATE_SHARE_LINK_RESET: \"GENERATE_SHARE_LINK_RESET\",\n\n  GET_CERTIFICATE_BY_ID: \"GET_CERTIFICATE_BY_ID\",\n  GET_CERTIFICATE_BY_ID_PENDING: \"GET_CERTIFICATE_BY_ID_PENDING\",\n  GET_CERTIFICATE_BY_ID_SUCCESS: \"GET_CERTIFICATE_BY_ID_SUCCESS\",\n  GET_CERTIFICATE_BY_ID_FAILURE: \"GET_CERTIFICATE_BY_ID_FAILURE\",\n\n  CERTIFICATE_OBFUSCATE_RESET: \"CERTIFICATE_OBFUSCATE_RESET\",\n  CERTIFICATE_OBFUSCATE_UPDATE: \"CERTIFICATE_OBFUSCATE_UPDATE\",\n\n  CERTIFICATE_TEMPLATE_REGISTER: \"CERTIFICATE_TEMPLATE_REGISTER\",\n  CERTIFICATE_TEMPLATE_SELECT_TAB: \"CERTIFICATE_TEMPLATE_SELECT_TAB\"\n};\n\n// Reducers\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case types.RESET_CERTIFICATE:\n    case types.NETWORK_RESET:\n      return {\n        ...initialState\n      };\n    case types.UPDATE_CERTIFICATE:\n      return {\n        ...initialState,\n        raw: action.payload,\n        rawModified: action.payload,\n        store: null,\n        storeError: null,\n        storeLoading: true\n      };\n    case types.LOADING_STORE_SUCCESS:\n      return {\n        ...state,\n        store: action.payload,\n        storeError: null,\n        storeLoading: false\n      };\n    case types.LOADING_STORE_FAILURE:\n      return {\n        ...state,\n        storeError: action.payload,\n        storeLoading: false\n      };\n    case types.VERIFYING_CERTIFICATE:\n      return {\n        ...state,\n        issuerIdentities: null,\n        certificateHash: false,\n        certificateIssued: false,\n        certificateNotRevoked: false,\n        certificateIssuer: false,\n        certificateStore: false,\n\n        certificateHashVerifying: true,\n        certificateIssuedVerifying: true,\n        certificateNotRevokedVerifying: true,\n        certificateIssuerVerifying: true,\n        certificateStoreVerifying: true,\n\n        certificateHashError: null,\n        certificateIssuedError: null,\n        certificateNotRevokedError: null,\n        certificateIssuerError: null,\n        certificateStoreError: null,\n\n        verificationStatus: []\n      };\n    case types.VERIFYING_CERTIFICATE_HASH_SUCCESS:\n      return {\n        ...state,\n        certificateHash: true,\n        certificateHashError: null,\n        certificateHashVerifying: false,\n        verificationStatus: [\n          ...state.verificationStatus,\n          {\n            message: \"Certificate integrity checked\",\n            warning: false,\n            error: false\n          }\n        ]\n      };\n    case types.VERIFYING_CERTIFICATE_HASH_FAILURE:\n      return {\n        ...state,\n        certificateHash: false,\n        certificateHashError: action.payload,\n        certificateHashVerifying: false,\n        verificationStatus: [\n          ...state.verificationStatus,\n          {\n            message: \"Certificate has been tampered\",\n            warning: false,\n            error: true\n          }\n        ]\n      };\n    case types.VERIFYING_CERTIFICATE_ISSUED_SUCCESS:\n      return {\n        ...state,\n        certificateIssued: true,\n        certificateIssuedError: null,\n        certificateIssuedVerifying: false,\n        verificationStatus: [\n          ...state.verificationStatus,\n          {\n            message: \"Certificate has been issued\",\n            warning: false,\n            error: false\n          }\n        ]\n      };\n    case types.VERIFYING_CERTIFICATE_ISSUED_FAILURE:\n      return {\n        ...state,\n        certificateIssued: false,\n        certificateIssuedError: action.payload,\n        certificateIssuedVerifying: false,\n        verificationStatus: [\n          ...state.verificationStatus,\n          {\n            message: \"Certificate is not issued\",\n            warning: false,\n            error: true\n          }\n        ]\n      };\n    case types.VERIFYING_CERTIFICATE_REVOCATION_SUCCESS:\n      return {\n        ...state,\n        certificateNotRevoked: true,\n        certificateNotRevokedError: null,\n        certificateNotRevokedVerifying: false,\n        verificationStatus: [\n          ...state.verificationStatus,\n          {\n            message: \"Certificate is issued\",\n            warning: false,\n            error: false\n          }\n        ]\n      };\n    case types.VERIFYING_CERTIFICATE_REVOCATION_FAILURE:\n      return {\n        ...state,\n        certificateNotRevoked: false,\n        certificateNotRevokedError: action.payload,\n        certificateNotRevokedVerifying: false,\n        verificationStatus: [\n          ...state.verificationStatus,\n          {\n            message: \"Certificate has been revoked\",\n            warning: false,\n            error: true\n          }\n        ]\n      };\n    case types.VERIFYING_CERTIFICATE_ISSUER_SUCCESS:\n      return {\n        ...state,\n        issuerIdentities: action.payload,\n        certificateIssuer: true,\n        certificateIssuerVerifying: false,\n        certificateIssuerError: null,\n        verificationStatus: [\n          ...state.verificationStatus,\n          {\n            message: \"Known certificate issuer\",\n            warning: false,\n            error: false\n          }\n        ]\n      };\n    case types.VERIFYING_CERTIFICATE_ISSUER_FAILURE:\n      return {\n        ...state,\n        certificateIssuer: false,\n        certificateIssuerVerifying: false,\n        certificateIssuerError: action.payload,\n        verificationStatus: [\n          ...state.verificationStatus,\n          {\n            message: \"Unknown certificate issuer\",\n            warning: false,\n            error: false\n          }\n        ]\n      };\n    case types.VERIFYING_CERTIFICATE_STORE_SUCCESS:\n      return {\n        ...state,\n        certificateStore: true,\n        certificateStoreError: null,\n        certificateStoreVerifying: false,\n        verificationStatus: [\n          ...state.verificationStatus,\n          {\n            message: \"Certificate store checked\",\n            warning: false,\n            error: false\n          }\n        ]\n      };\n    case types.VERIFYING_CERTIFICATE_STORE_FAILURE:\n      return {\n        ...state,\n        certificateStore: false,\n        certificateStoreError: action.payload,\n        certificateStoreVerifying: false,\n        verificationStatus: [\n          ...state.verificationStatus,\n          {\n            message: \"Certificate store does not exist\",\n            warning: false,\n            error: true\n          }\n        ]\n      };\n    case types.SENDING_CERTIFICATE:\n      return {\n        ...state,\n        emailState: states.PENDING,\n        emailError: null\n      };\n    case types.SENDING_CERTIFICATE_RESET:\n      return {\n        ...state,\n        emailState: states.INITIAL,\n        emailError: null\n      };\n    case types.SENDING_CERTIFICATE_SUCCESS:\n      return {\n        ...state,\n        emailState: states.SUCCESS,\n        emailError: null\n      };\n    case types.SENDING_CERTIFICATE_FAILURE:\n      return {\n        ...state,\n        emailState: states.FAILURE,\n        emailError: action.payload\n      };\n    case types.GENERATE_SHARE_LINK_SUCCESS:\n      return {\n        ...state,\n        shareLink: action.payload,\n        shareLinkState: states.SUCCESS\n      };\n    case types.GENERATE_SHARE_LINK_FAILURE:\n      return {\n        ...state,\n        shareLink: {},\n        shareLinkState: states.FAILURE\n      };\n    case types.GENERATE_SHARE_LINK_RESET:\n      return {\n        ...state,\n        shareLink: {},\n        shareLinkState: states.INITIAL\n      };\n    case types.GET_CERTIFICATE_BY_ID_PENDING:\n      return {\n        ...state,\n        encryptedCertificateState: states.PENDING\n      };\n    case types.GET_CERTIFICATE_BY_ID_SUCCESS:\n      return {\n        ...state,\n        encryptedCertificate: action.payload,\n        encryptedCertificateState: states.SUCCESS\n      };\n    case types.GET_CERTIFICATE_BY_ID_FAILURE:\n      return {\n        ...state,\n        encryptedCertificate: {},\n        encryptedCertificateState: states.FAILURE,\n        encryptedCertificateError: action.payload\n      };\n    case types.CERTIFICATE_OBFUSCATE_RESET:\n      return {\n        ...initialState,\n        rawModified: state.raw\n      };\n    case types.CERTIFICATE_OBFUSCATE_UPDATE:\n      return {\n        ...state,\n        rawModified: action.payload\n      };\n    case types.CERTIFICATE_TEMPLATE_REGISTER:\n      return {\n        ...state,\n        templates: action.payload\n      };\n    case types.CERTIFICATE_TEMPLATE_SELECT_TAB:\n      return {\n        ...state,\n        activeTemplateTab: action.payload\n      };\n    default:\n      return state;\n  }\n}\n\n// Action Creators\nexport function resetCertificateState() {\n  return {\n    type: types.RESET_CERTIFICATE\n  };\n}\n\nexport function updateCertificate(payload) {\n  return {\n    type: types.UPDATE_CERTIFICATE,\n    payload\n  };\n}\n\nexport function verifyCertificate(payload) {\n  return {\n    type: types.VERIFYING_CERTIFICATE,\n    payload\n  };\n}\n\nexport function updateFilteredCertificate(payload) {\n  return {\n    type: types.UPDATE_FILTERED_CERTIFICATE,\n    payload\n  };\n}\n\nexport function verifyingCertificateIssuerSuccess({ issuerIdentities }) {\n  return {\n    type: types.VERIFYING_CERTIFICATE_ISSUER_SUCCESS,\n    payload: issuerIdentities\n  };\n}\n\nexport function verifyingCertificateIssuerFailure({ error }) {\n  return {\n    type: types.VERIFYING_CERTIFICATE_ISSUER_FAILURE,\n    error\n  };\n}\n\nexport function verifyingCertificateStoreSuccess() {\n  return {\n    type: types.VERIFYING_CERTIFICATE_STORE_SUCCESS\n  };\n}\n\nexport function verifyingCertificateStoreFailure({ error }) {\n  return {\n    type: types.VERIFYING_CERTIFICATE_STORE_FAILURE,\n    error\n  };\n}\n\nexport function verifyingCertificateRevocationSuccess() {\n  return {\n    type: types.VERIFYING_CERTIFICATE_REVOCATION_SUCCESS\n  };\n}\n\nexport function verifyingCertificateRevocationFailure({ error }) {\n  return {\n    type: types.VERIFYING_CERTIFICATE_REVOCATION_FAILURE,\n    error\n  };\n}\n\nexport function verifyingCertificateIssuedSuccess() {\n  return {\n    type: types.VERIFYING_CERTIFICATE_ISSUED_SUCCESS\n  };\n}\n\nexport function verifyingCertificateIssuedFailure({ error }) {\n  return {\n    type: types.VERIFYING_CERTIFICATE_ISSUED_FAILURE,\n    error\n  };\n}\n\nexport function verifyingCertificateHashSuccess() {\n  return {\n    type: types.VERIFYING_CERTIFICATE_HASH_SUCCESS\n  };\n}\n\nexport function verifyingCertificateHashFailure({ error }) {\n  return {\n    type: types.VERIFYING_CERTIFICATE_HASH_FAILURE,\n    error\n  };\n}\n\nexport function sendCertificate(payload) {\n  return {\n    type: types.SENDING_CERTIFICATE,\n    payload\n  };\n}\n\nexport function sendCertificateReset() {\n  return {\n    type: types.SENDING_CERTIFICATE_RESET\n  };\n}\n\nexport function generateShareLink() {\n  return {\n    type: types.GENERATE_SHARE_LINK\n  };\n}\n\nexport function retrieveCertificateByLink(payload) {\n  return {\n    type: types.GET_CERTIFICATE_BY_ID,\n    payload\n  };\n}\n\nexport function resetCertificateObfuscation() {\n  return {\n    type: types.CERTIFICATE_OBFUSCATE_RESET\n  };\n}\n\nexport function updateObfuscatedCertificate(payload) {\n  return {\n    type: types.CERTIFICATE_OBFUSCATE_UPDATE,\n    payload\n  };\n}\n\nexport function registerTemplates(payload) {\n  return {\n    type: types.CERTIFICATE_TEMPLATE_REGISTER,\n    payload\n  };\n}\n\nexport function selectTemplateTab(payload) {\n  return {\n    type: types.CERTIFICATE_TEMPLATE_SELECT_TAB,\n    payload\n  };\n}\n\n// Selectors\nexport function getIssuerIdentityStatus(store) {\n  const {\n    issuerIdentities,\n    certificateIssuerVerifying,\n    certificateIssuerError,\n    certificateIssuer\n  } = store.certificate;\n  return {\n    identities: issuerIdentities,\n    verified: certificateIssuer,\n    verifying: certificateIssuerVerifying,\n    error: certificateIssuerError\n  };\n}\n\nexport function getHashStatus(store) {\n  const {\n    certificateHash,\n    certificateHashError,\n    certificateHashVerifying\n  } = store.certificate;\n  return {\n    verified: certificateHash,\n    verifying: certificateHashVerifying,\n    error: certificateHashError\n  };\n}\n\nexport function getStoreStatus(store) {\n  const {\n    certificateStore,\n    certificateStoreError,\n    certificateStoreVerifying\n  } = store.certificate;\n  return {\n    verified: certificateStore,\n    verifying: certificateStoreVerifying,\n    error: certificateStoreError\n  };\n}\n\nexport function getIssuedStatus(store) {\n  const {\n    certificateIssued,\n    certificateIssuedError,\n    certificateIssuedVerifying\n  } = store.certificate;\n  return {\n    verified: certificateIssued,\n    verifying: certificateIssuedVerifying,\n    error: certificateIssuedError\n  };\n}\n\nexport function getNotRevokedStatus(store) {\n  const {\n    certificateNotRevoked,\n    certificateNotRevokedError,\n    certificateNotRevokedVerifying\n  } = store.certificate;\n  return {\n    verified: certificateNotRevoked,\n    verifying: certificateNotRevokedVerifying,\n    error: certificateNotRevokedError\n  };\n}\n\nexport function getCertificate(store) {\n  return store.certificate.rawModified;\n}\n\nexport function getVerifying(store) {\n  const {\n    certificateIssuerVerifying,\n    certificateHashVerifying,\n    certificateIssuedVerifying,\n    certificateNotRevokedVerifying,\n    certificateStoreVerifying\n  } = store.certificate;\n  return (\n    certificateIssuerVerifying ||\n    certificateHashVerifying ||\n    certificateIssuedVerifying ||\n    certificateNotRevokedVerifying ||\n    certificateStoreVerifying\n  );\n}\n\nexport function getVerified(store) {\n  const hash = getHashStatus(store).verified;\n  const issued = getIssuedStatus(store).verified;\n  const notRevoked = getNotRevokedStatus(store).verified;\n  const identity = getIssuerIdentityStatus(store).verified;\n  const storeStatus = getStoreStatus(store).verified;\n\n  return hash && issued && notRevoked && identity && storeStatus;\n}\n\nexport function getVerificationStatus(store) {\n  return store.certificate.verificationStatus;\n}\n\nexport function getEmailSendingState(store) {\n  return store.certificate.emailState;\n}\n\nexport function getShareLink(store) {\n  return store.certificate.shareLink;\n}\n\nexport function getShareLinkState(store) {\n  return store.certificate.shareLinkState;\n}\n\nexport function getEncryptedCertificate(store) {\n  return store.certificate.encryptedCertificate;\n}\n\nexport function getEncryptedCertificateStatus(store) {\n  return store.certificate.encryptedCertificateState;\n}\n\nexport function getActiveTemplateTab(store) {\n  return store.certificate.activeTemplateTab;\n}\n\nexport function getTemplates(store) {\n  return store.certificate.templates;\n}\n"]},"metadata":{},"sourceType":"module"}